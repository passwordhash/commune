{
    "openapi": "3.0.3",
    "info": {
        "title": "Swagger Commune",
        "description": "TODO",
        "contact": {
            "email": "iam@it-yaroslav.ru"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8090"
        }
    ],
    "tags": [
        {
            "name": "auth",
            "description": "Operations about user account"
        },
        {
            "name": "messages",
            "description": "Dealing with messages"
        }
    ],
    "paths": {
        "/auth/sign-up": {
            "post": {
                "tags": [ "auth" ],
                "summary": "Create new account",
                "description": "Create new account with Email and Nickname. If successful, an email with a passcode is sent to the specified email address",
                "operationId": "signUp",
                "requestBody": {
                    "description": "Create new account with Email and Nickname",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSignUp"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccessToken"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Log in account",
                "description": "Authorize in account by Email and Passcode then get a AuthToken",
                "operationId": "signIn",
                "requestBody": {
                    "description": "Authorize in account by Email and Passcode then get a AuthToken",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSignIn"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input body",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Reset passcode and send to enail new one",
                "description": "Reset passcode and send to enail new one",
                "operationId": "resetPasscode",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSignUp"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input body",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Bad credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/check": {
            "get": {
                "tags": ["auth"],
                "summary": "Check if auth token valid",
                "description": "Check if auth token valid",
                "operationId": "check",
                "responses": {
                    "200": {
                        "description": "Auth token valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User unathorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "token has invalid claims: token is expired"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },

        "/api/message/new": {
            "post": {
                "tags": ["messages"],
                "summary": "Create new message and send it to websocket subscribers",
                "description": "Create new message with text and author id and send it to websocket subscribers. Takes author id from Bearer Token",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "operationId": "newMessage",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewMessage"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OKMessageResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/message/list": {
            "get": {
                "tags": [
                    "messages"
                ],
                "summary": "Get list of all messages",
                "description": "Get list of all messages",
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "withAdditions",
                        "in": "path",
                        "required": false,
                        "description": "If equals true messages will contain additional information, such as the author otherwise just messages"
                    }
                ],
                "operationId": "listMessage",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Message"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UserSignUp": {
                "required": [
                    "email",
                    "nickname"
                ],
                "type": "object",
                "properties": {
                    "nickname": {
                        "$ref": "#/components/schemas/Nickname"
                    },
                    "email": {
                        "$ref": "#/components/schemas/Email"
                    }
                }
            },
            "UserSignIn": {
                "required": [ "email", "passcode" ],
                "type": "object",
                "properties": {
                    "email": {
                        "$ref": "#/components/schemas/Email"
                    },
                    "passcode": {
                        "$ref": "#/components/schemas/Passcode"
                    }
                }
            },
            "AuthResponse": {
                "properties": {
                    "token": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySWQiOiIyYzViYTM4ZC1iMGYwLTQzODktYWU3NS03OGJhNmZiZTZkZGEiLCJleHAiOjE3MTg3MDk2MzB9"
                    },
                    "id": {
                        "type": "string",
                        "example": "2c5ba38d-b0f0-4389-ae75-78ba6fbe6dda"
                    }
                }
            },
            "NewMessage": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string",
                        "example": "Hello"
                    }
                }
            },
            "AccessToken": {
                "required": [
                    "token"
                ],
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySWQiOiIyYzViYTM4ZC1iMGYwLTQzODktYWU3NS03OGJhNmZiZTZkZGEiLCJleHAiOjE3MTg3MDk2MzB9"
                    }
                }
            },
            "MessageResponse": {
                "required": ["message"],
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "Something went wrong"
                    }
                }
            },
            "OKMessageResponse": {
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "ok"
                    }
                }
            },
            "Nickname": {
                "type": "string",
                "example": "SomeNickname123"
            },
            "Email": {
                "description": "Unique email. A passcode will be sent to it",
                "type": "string",
                "example": "example@mail.ru"
            },
            "Passcode": {
                "description": "A code used as a password. It also comes in the mail. It is stored in a hashed form.",
                "type": "string",
                "example": "5Bj2L4"
            },
            "Message": {
                "description": "Message from user",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "2c5ba38d-b0f0-4389-ae75-78ba6fbe6dda"
                    },
                    "text": {
                        "type": "string",
                        "example": "Hello"
                    },
                    "date": {
                        "type": "string",
                        "example": "2024-07-02T18:59:48.341Z",
                        "format": "date-time"
                    },
                    "author_id":{
                        "type": "string",
                        "example": "2c5ba38d-b0f0-4389-ae75-78ba6fbe6dda"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ]
}